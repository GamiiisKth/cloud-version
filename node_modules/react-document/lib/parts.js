"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const serialize = require("serialize-javascript");
class DocumentPart extends React.Component {
}
DocumentPart.contextTypes = {
    documentProps: React.PropTypes.object.isRequired
};
exports.DocumentPart = DocumentPart;
class Html extends DocumentPart {
    render() {
        return (React.createElement("html", Object.assign({}, this.context.documentProps.htmlProps, this.props)));
    }
}
exports.Html = Html;
class Head extends DocumentPart {
    render() {
        const { title, viewport, head, css, js } = Object.assign({}, this.context.documentProps, this.props);
        return (React.createElement("head", null,
            React.createElement("meta", { charSet: "utf-8" }),
            title && React.createElement("title", null, title),
            React.createElement("meta", { name: "viewport", content: viewport }),
            head && head.map((element, i) => React.cloneElement(element, { key: i })),
            css && css.map(file => React.createElement("link", { key: file, href: file, rel: "stylesheet" })),
            js && js.map(file => React.createElement("script", { key: file, src: file, defer: true })),
            this.props.children));
    }
}
exports.Head = Head;
class Body extends DocumentPart {
    render() {
        return (React.createElement("body", Object.assign({}, this.context.documentProps.bodyProps, this.props)));
    }
}
exports.Body = Body;
class App extends DocumentPart {
    render() {
        const id = this.props.id || this.context.documentProps.appMountId;
        const content = this.props.children || this.context.documentProps.app;
        return (React.createElement("div", { id: id, dangerouslySetInnerHTML: { __html: content || '' } }));
    }
}
exports.App = App;
class Footer extends DocumentPart {
    render() {
        const { window, footer } = Object.assign({}, this.context.documentProps, this.props);
        const { children } = this.props;
        if (!window && !footer && !children) {
            return null;
        }
        return (React.createElement("div", null,
            window && (React.createElement("script", { dangerouslySetInnerHTML: { __html: Object.keys(window).map(key => `window[${key}] = ${serialize(window[key])};`).join('\n')
                } })),
            footer &&
                footer.map((element, i) => React.cloneElement(element, { key: i })),
            children));
    }
}
exports.Footer = Footer;
//# sourceMappingURL=parts.js.map